--- python-elementary-0.7.3/include/elementary/c_elementary.pxd.orig	2010-10-01 01:03:41.000000000 +0200
+++ python-elementary-0.7.3/include/elementary/c_elementary.pxd	2012-01-22 09:09:18.886413822 +0100
@@ -161,13 +161,13 @@
         evas.c_evas.Eina_Bool hover_bottom
 
     ctypedef char *(*GenlistItemLabelGetFunc)(void *data, evas.c_evas.Evas_Object *obj, const_char_ptr part)
-    ctypedef evas.c_evas.Evas_Object *(*GenlistItemIconGetFunc)(void *data, evas.c_evas.Evas_Object *obj, const_char_ptr part)
+    ctypedef evas.c_evas.Evas_Object *(*GenlistItemContentGetFunc)(void *data, evas.c_evas.Evas_Object *obj, const_char_ptr part)
     ctypedef evas.c_evas.Eina_Bool (*GenlistItemStateGetFunc)(void *data, evas.c_evas.Evas_Object *obj, const_char_ptr part)
     ctypedef void (*GenlistItemDelFunc)(void *data, evas.c_evas.Evas_Object *obj)
 
     ctypedef struct Elm_Genlist_Item_Class_Func:
         GenlistItemLabelGetFunc label_get
-        GenlistItemIconGetFunc icon_get
+        GenlistItemContentGetFunc content_get
         GenlistItemStateGetFunc state_get
         GenlistItemDelFunc del_ "del"
 
@@ -179,10 +179,9 @@
     ctypedef evas.c_evas.Evas_Object *(*Elm_Tooltip_Item_Content_Cb) (void *data, evas.c_evas.Evas_Object *obj, void *item)
 
     ctypedef struct Elm_Hoversel_Item
-    ctypedef struct Elm_Menu_Item
+    ctypedef struct Elm_Object_Item
     ctypedef struct Elm_Toolbar_Item
     ctypedef struct Elm_List_Item
-    ctypedef struct Elm_Carousel_Item
     ctypedef struct Elm_Genlist_Item
     ctypedef struct Elm_Theme
 
@@ -608,12 +607,6 @@
     void 	elm_list_scroller_policy_set(evas.c_evas.Evas_Object *obj, Elm_Scroller_Policy policy_h, Elm_Scroller_Policy policy_v)
 
 
-    # Carousel object
-    evas.c_evas.Evas_Object *elm_carousel_add(evas.c_evas.Evas_Object *parent)
-    Elm_Carousel_Item *elm_carousel_item_add(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Object *icon, char *label, void (*func) (void *data, evas.c_evas.Evas_Object *obj, void *event_info), void *data)
-    void         elm_carousel_item_del(Elm_Carousel_Item *item)
-    void         elm_carousel_item_select(Elm_Carousel_Item *item)
-
     # Slider object
     evas.c_evas.Evas_Object *elm_slider_add(evas.c_evas.Evas_Object *parent)
     void elm_slider_label_set(evas.c_evas.Evas_Object *obj, char *label)
@@ -640,8 +633,8 @@
     void elm_genlist_block_count_set(evas.c_evas.Evas_Object *obj, int n)
     Elm_Genlist_Item *elm_genlist_item_append(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *parent, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
     Elm_Genlist_Item *elm_genlist_item_prepend(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *parent, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
-    Elm_Genlist_Item *elm_genlist_item_insert_before(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *before, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
-    Elm_Genlist_Item *elm_genlist_item_insert_after(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *after, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
+    Elm_Genlist_Item *elm_genlist_item_insert_before(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *parent, Elm_Genlist_Item *before, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
+    Elm_Genlist_Item *elm_genlist_item_insert_after(evas.c_evas.Evas_Object *obj, Elm_Genlist_Item_Class *itc, void *data, Elm_Genlist_Item *parent, Elm_Genlist_Item *after, Elm_Genlist_Item_Flags flags, evas.c_evas.Evas_Smart_Cb func, void *func_data)
     Elm_Genlist_Item *elm_genlist_selected_item_get(evas.c_evas.Evas_Object *obj)
     evas.c_evas.Eina_List *elm_genlist_selected_items_get(evas.c_evas.Evas_Object *obj)
     evas.c_evas.Eina_List *elm_genlist_realized_items_get(evas.c_evas.Evas_Object *obj)
@@ -756,21 +749,20 @@
     evas.c_evas.Evas_Object *elm_menu_add(evas.c_evas.Evas_Object *parent)
     void  elm_menu_move(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Coord x, evas.c_evas.Evas_Coord y)
     void  elm_menu_parent_set(evas.c_evas.Evas_Object *obj, evas.c_evas.Evas_Object *parent)
-    Elm_Menu_Item *elm_menu_item_add(evas.c_evas.Evas_Object *obj, Elm_Menu_Item *parent,
+    Elm_Object_Item *elm_menu_item_add(evas.c_evas.Evas_Object *obj, Elm_Object_Item *parent,
                                      evas.c_evas.Evas_Object *icon, char *label,
                                      void (*func) (void *data, evas.c_evas.Evas_Object *obj, void *event_info),
                                      void *data)
-    Elm_Menu_Item *elm_menu_item_separator_add(evas.c_evas.Evas_Object *obj, Elm_Menu_Item *parent)
-    void  elm_menu_item_label_set(Elm_Menu_Item *item, char *label)
-    char *elm_menu_item_label_get(Elm_Menu_Item *item)
-    void  elm_menu_item_icon_set(Elm_Menu_Item *item, evas.c_evas.Evas_Object *icon)
-    void  elm_menu_item_disabled_set(Elm_Menu_Item *item, evas.c_evas.Eina_Bool disabled)
-    void  elm_menu_item_del(Elm_Menu_Item *item)
-    void  elm_menu_item_del_cb_set(Elm_Menu_Item *it, void (*func)(void *data, evas.c_evas.Evas_Object *obj, void *event_info))
-    void *elm_menu_item_data_get(Elm_Menu_Item *it)
-    void  elm_menu_item_data_set(Elm_Menu_Item *item, void *data)
-    evas.c_evas.Evas_Object *elm_menu_object_get(Elm_Menu_Item *it)
-    evas.c_evas.Eina_List *elm_menu_item_subitems_get(Elm_Menu_Item *item)
+    Elm_Object_Item *elm_menu_item_separator_add(evas.c_evas.Evas_Object *obj, Elm_Object_Item *parent)
+    void  elm_menu_item_label_set(Elm_Object_Item *item, char *label)
+    char *elm_menu_item_label_get(Elm_Object_Item *item)
+    void  elm_menu_item_object_icon_name_set(Elm_Object_Item *item, evas.c_evas.Evas_Object *icon)
+    void  elm_menu_item_disabled_set(Elm_Object_Item *item, evas.c_evas.Eina_Bool disabled)
+    void  elm_menu_item_del(Elm_Object_Item *item)
+    void  elm_menu_item_del_cb_set(Elm_Object_Item *it, void (*func)(void *data, evas.c_evas.Evas_Object *obj, void *event_info))
+    void *elm_menu_item_data_get(Elm_Object_Item *it)
+    void  elm_menu_item_data_set(Elm_Object_Item *item, void *data)
+    evas.c_evas.Eina_List *elm_menu_item_subitems_get(Elm_Object_Item *item)
 
     # Panel
     evas.c_evas.Evas_Object *elm_panel_add(evas.c_evas.Evas_Object *parent)
--- python-elementary-0.7.3/elementary/elementary.c_elementary_genlist.pxi.orig	2010-10-01 01:03:41.000000000 +0200
+++ python-elementary-0.7.3/elementary/elementary.c_elementary_genlist.pxi	2012-01-22 09:04:26.396404027 +0100
@@ -45,12 +45,12 @@
     else:
         return NULL
 
-cdef c_evas.Evas_Object *_py_elm_genlist_item_icon_get(void *data, c_evas.Evas_Object *obj, const_char_ptr part) with gil:
+cdef c_evas.Evas_Object *_py_elm_genlist_item_content_get(void *data, c_evas.Evas_Object *obj, const_char_ptr part) with gil:
     cdef object prm = <object>data
     cdef c_evas.Object icon
     cdef GenlistItemClass itc = prm[0]
 
-    func = itc._icon_get_func
+    func = itc._content_get_func
     if func is None:
         return NULL
 
@@ -113,7 +113,7 @@
     This class should be created and handled to the Genlist itself.
 
     It may be subclassed, in this case the methods L{label_get()},
-    L{icon_get()}, L{state_get()} and L{delete()} will be used.
+    L{content_get()}, L{state_get()} and L{delete()} will be used.
 
     It may also be instantiated directly, given getters to override as
     constructor parameters.
@@ -122,25 +122,25 @@
     cdef Elm_Genlist_Item_Class obj
     cdef readonly object _item_style
     cdef readonly object _label_get_func
-    cdef readonly object _icon_get_func
+    cdef readonly object _content_get_func
     cdef readonly object _state_get_func
     cdef readonly object _del_func
 
     def __cinit__(self, *a, **ka):
         self._item_style = "default"
         self._label_get_func = None
-        self._icon_get_func = None
+        self._content_get_func = None
         self._state_get_func = None
         self._del_func = None
 
         self.obj.item_style = NULL
         self.obj.func.label_get = _py_elm_genlist_item_label_get
-        self.obj.func.icon_get = _py_elm_genlist_item_icon_get
+        self.obj.func.content_get = _py_elm_genlist_item_content_get
         self.obj.func.state_get = _py_elm_genlist_item_state_get
         self.obj.func.del_ = _py_elm_genlist_item_del
 
     def __init__(self, item_style=None, label_get_func=None,
-                 icon_get_func=None, state_get_func=None, del_func=None):
+                 content_get_func=None, state_get_func=None, del_func=None):
         """GenlistItemClass constructor.
 
         @parm: B{item_style} the string that defines the genlist item
@@ -155,8 +155,8 @@
 
                   C{func(obj, part, item_data) -> str}
 
-        @parm: B{icon_get_func} if provided will override the behavior
-               defined by L{icon_get()} in this class. Its purpose is
+        @parm: B{content_get_func} if provided will override the behavior
+               defined by L{content_get()} in this class. Its purpose is
                to return the icon object to be used (swalloed) by a
                given part and row. This function should have the
                signature:
@@ -192,12 +192,12 @@
         else:
             self._label_get_func = self.label_get
 
-        if icon_get_func and not callable(icon_get_func):
-            raise TypeError("icon_get_func is not callable!")
-        elif icon_get_func:
-            self._icon_get_func = icon_get_func
+        if content_get_func and not callable(content_get_func):
+            raise TypeError("content_get_func is not callable!")
+        elif content_get_func:
+            self._content_get_func = content_get_func
         else:
-            self._icon_get_func = self.icon_get
+            self._content_get_func = self.content_get
 
         if state_get_func and not callable(state_get_func):
             raise TypeError("state_get_func is not callable!")
@@ -219,18 +219,18 @@
         self.obj.item_style = self._item_style
 
     def __str__(self):
-        return ("%s(item_style=%r, label_get_func=%s, icon_get_func=%s, "
+        return ("%s(item_style=%r, label_get_func=%s, content_get_func=%s, "
                 "state_get_func=%s, del_func=%s)") % \
                (self.__class__.__name__,
                 self._item_style,
                 self._label_get_func,
-                self._icon_get_func,
+                self._content_get_func,
                 self._state_get_func,
                 self._del_func)
 
     def __repr__(self):
         return ("%s(%#x, refcount=%d, Elm_Genlist_Item_Class=%#x, "
-                "item_style=%r, label_get_func=%s, icon_get_func=%s, "
+                "item_style=%r, label_get_func=%s, content_get_func=%s, "
                 "state_get_func=%s, del_func=%s)") % \
                (self.__class__.__name__,
                 <unsigned long><void *>self,
@@ -238,7 +238,7 @@
                 <unsigned long>&self.obj,
                 self._item_style,
                 self._label_get_func,
-                self._icon_get_func,
+                self._content_get_func,
                 self._state_get_func,
                 self._del_func)
 
@@ -258,14 +258,14 @@
         """
         return None
 
-    def icon_get(self, c_evas.Object obj, char *part, item_data):
+    def content_get(self, c_evas.Object obj, char *part, item_data):
         """To be called by Genlist for each row to get its icon.
 
         @parm: B{obj:} the Genlist instance
         @parm: B{part:} the part that is being handled.
         @parm: B{item_data:} the value given to genlist append/prepend.
 
-        @return: icon object to be used and swallowed.
+        @return: content object to be used and swallowed.
         @rtype: evas Object or None
         """
         return None
@@ -746,7 +746,7 @@
             return None
 
     def item_insert_before(self, GenlistItemClass item_class not None,
-                           item_data, GenlistItem before_item=None,
+                           item_data, GenlistItem parent_item=None, GenlistItem before_item=None,
                            int flags=ELM_GENLIST_ITEM_NONE,
                            func=None):
         """Insert a new item (row) before another item in this genlist.
@@ -772,9 +772,10 @@
                value given as parameter to this function.
         """
         cdef GenlistItem ret = GenlistItem()
-        cdef Elm_Genlist_Item *item, *before
+        cdef Elm_Genlist_Item *item, *before, *parent
         cdef c_evas.Evas_Smart_Cb cb
 
+        parent = _elm_genlist_item_from_python(parent_item)
         before = _elm_genlist_item_from_python(before_item)
 
         if func is None:
@@ -788,7 +789,7 @@
         prm = (item_class, item_data, ret, func)
         item = elm_genlist_item_insert_before(self.obj, &item_class.obj,
                                               <void*>prm,
-                                              before,
+                                              parent, before,
                                               <Elm_Genlist_Item_Flags>flags, cb,
                                               <void*>prm)
         if item != NULL:
@@ -798,7 +799,7 @@
             return None
 
     def item_insert_after(self, GenlistItemClass item_class not None,
-                          item_data, GenlistItem after_item=None,
+                          item_data, GenlistItem parent_item=None, GenlistItem after_item=None,
                           int flags=ELM_GENLIST_ITEM_NONE,
                           func=None):
         """Insert a new item (row) after another item in this genlist.
@@ -824,9 +825,10 @@
                value given as parameter to this function.
         """
         cdef GenlistItem ret = GenlistItem()
-        cdef Elm_Genlist_Item *item, *after
+        cdef Elm_Genlist_Item *item, *after, *parent
         cdef c_evas.Evas_Smart_Cb cb
 
+        parent = _elm_genlist_item_from_python(parent_item)
         after = _elm_genlist_item_from_python(after_item)
 
         if func is None:
@@ -840,7 +842,7 @@
         prm = (item_class, item_data, ret, func)
         item = elm_genlist_item_insert_after(self.obj, &item_class.obj,
                                              <void*>prm,
-                                             after,
+                                             parent, after,
                                              <Elm_Genlist_Item_Flags>flags, cb,
                                              <void*>prm)
         if item != NULL:
--- python-elementary-0.7.3/elementary/elementary.c_elementary_menu.pxi.orig	2010-10-01 01:03:41.000000000 +0200
+++ python-elementary-0.7.3/elementary/elementary.c_elementary_menu.pxi	2012-01-22 08:47:13.876369454 +0100
@@ -28,7 +28,7 @@
     it.__del_cb()
 
 cdef class MenuItem:
-    cdef Elm_Menu_Item *obj
+    cdef Elm_Object_Item *obj
     cdef object cbt
 
     def __del_cb(self):
@@ -39,7 +39,7 @@
     def __init__(self, c_evas.Object menu, MenuItem parent, label, c_evas.Object icon,
                  callback, *args, **kargs):
         cdef c_evas.Evas_Object *icon_obj = NULL
-        cdef Elm_Menu_Item *parent_obj = NULL
+        cdef Elm_Object_Item *parent_obj = NULL
         cdef void* cbdata = NULL
         cdef void (*cb) (void *, c_evas.Evas_Object *, void *)
         cb = NULL
@@ -87,11 +87,11 @@
             self.label_set(value)
 
     def icon_set(self, c_evas.Object icon):
-        elm_menu_item_icon_set(self.obj, icon.obj)
+        elm_menu_item_object_icon_name_set(self.obj, icon.obj)
 
     property icon:
         def __set__(self, c_evas.Object icon):
-            elm_menu_item_icon_set(self.obj, icon.obj)
+            elm_menu_item_object_icon_name_set(self.obj, icon.obj)
 
     def disabled_set(self, disabled):
         elm_menu_item_disabled_set(self.obj, disabled)
@@ -124,7 +124,7 @@
         lst = elm_menu_item_subitems_get(self.obj)
         itr = lst
         while itr:
-            data = elm_menu_item_data_get(<Elm_Menu_Item *>itr.data)
+            data = elm_menu_item_data_get(<Elm_Object_Item *>itr.data)
             if data != NULL:
                 (o, callback, it, a, ka) = <object>data
                 ret.append(it)
@@ -140,14 +140,14 @@
     it.__del_cb()
 
 cdef class MenuItemSeparator:
-    cdef Elm_Menu_Item *obj
+    cdef Elm_Object_Item *obj
 
     def __del_cb(self):
         self.obj = NULL
         Py_DECREF(self)
 
     def __init__(self, c_evas.Object menu, MenuItem parent):
-        cdef Elm_Menu_Item *parent_obj = NULL
+        cdef Elm_Object_Item *parent_obj = NULL
 
         if parent:
             parent_obj = parent.obj
